// Generated by CoffeeScript 1.6.3
(function() {
  var Server, exec, execFile, express, expressServer, process, server, spawn;

  express = require("express");

  process = require('child_process');

  spawn = process.spawn;

  exec = process.exec;

  execFile = process.execFile;

  expressServer = express();

  Server = (function() {
    function Server() {}

    Server.prototype.child = null;

    Server.prototype.restart = function() {
      var _this = this;
      return spawn("git", ["pull"]).on('close', function() {
        spawn("npm", ["install"]).on("close", function() {
          spawn("docpad", ["generate"]).on("close", function() {
            spawn("coffee", ["-c", "./app.coffee"]).on("close", function() {
              spawn('forever', ['stop', _this.app]).on('close', function() {
                if (_this.child) {
                  _this.child.kill();
                }
                _this.start('app.js');
              });
            });
          });
        });
      });
    };

    Server.prototype.start = function(app) {
      this.app = app;
      this.child = spawn('forever', ['start', this.app]);
      this.child.stdout.setEncoding('utf8');
      this.child.stdout.on('data', function(data) {
        var str;
        str = data.toString();
        console.log(str);
      });
      return this.child.on('close', function(code) {
        console.log('process exit code ' + code);
      });
    };

    return Server;

  })();

  server = new Server;

  server.restart('app.js');

  expressServer.post("/github/callback", function(req, res) {
    console.log("Github posthook received");
    return server.restart('app.js');
  });

  expressServer.listen(4030);

}).call(this);
